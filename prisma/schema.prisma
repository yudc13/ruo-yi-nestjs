// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 用户
model User {
  id           Int         @id @default(autoincrement())
  userName     String      @map("username") @db.VarChar(50)
  /// 登陆账号
  account      String      @unique @db.VarChar(20)
  password     String      @db.Char(64)
  /// 性别 0: 未知 1: 男  2: 女
  gender       String
  phone        String      @db.Char(11)
  email        String      @db.VarChar(50)
  /// 用户状态 0: 停用 1: 正常
  status       String      @default("1")
  /// 是否删除 0: 未删除 1: 已删除
  isDeleted    String      @default("0") @map("is_deleted")
  createAt     DateTime    @default(now()) @map("create_at")
  updatedAt    DateTime    @updatedAt @map("created_at")
  departmentId Int?        @map("department_id")
  department   Department? @relation(fields: [departmentId], references: [id])

  @@map("user")
}

/// 部门
model Department {
  id             Int          @id @default(autoincrement())
  departmentName String       @map("department_name") @db.VarChar(20)
  orderNum       Int          @map("order_num")
  /// 部门状态 0: 停用 1: 正常
  status         String       @default("1")
  /// 是否删除 0: 未删除 1: 已删除
  isDeleted      String       @default("0") @map("is_deleted")
  createAt       DateTime     @default(now()) @map("create_at")
  updatedAt      DateTime     @updatedAt @map("created_at")
  leader         String?      @db.VarChar(20)
  email          String?      @db.VarChar(50)
  phone          String?      @db.Char(11)
  parentId       Int?         @map("parent_id")
  parent         Department?  @relation("dept_parent_fkey", fields: [parentId], references: [id])
  children       Department[] @relation("dept_parent_fkey")
  users          User[]

  @@unique([id, parentId])
  @@map("department")
}

/// 菜单
model Menu {
  id        Int      @id @default(autoincrement())
  /// 菜单类型 1: 目录 2: 菜单 3: 按钮
  menuType  String   @default("1") @map("menu_type") @db.Char(1)
  menuName  String   @map("menu_name") @db.VarChar(20)
  menuUrl   String?  @map("menu_url") @db.VarChar(50)
  menuIcon  String?  @map("menu_icon") @db.VarChar(50)
  /// 权限标识
  permsCode String   @map("perms_code") @db.VarChar(30)
  orderNum  Int?     @map("order_num")
  /// 菜单状态 0: 隐藏 1: 显示
  status    String   @default("1")
  /// 是否删除 0: 未删除 1: 已删除
  isDeleted String   @default("0") @map("is_deleted")
  createAt  DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("created_at")
  parentId  Int?     @map("parent_id")
  parent    Menu?    @relation("menu_parent_fkey", fields: [parentId], references: [id])
  children  Menu[]   @relation("menu_parent_fkey")

  @@unique([id, parentId])
  @@map("menu")
}
